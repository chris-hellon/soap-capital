@inject IWebHostEnvironment HostEnvironment

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

    <meta property="og:site_name" content="soap.capital"/>
    <meta property="og:image" content="https://paperstreetsoap.azureedge.net/site/soapcapital-social-logo.png"/>
    <meta property="og:type" content="website"/>
    <meta property="twitter:creator" content="TylerDurden"/>
    <meta property="twitter:card" content="summary_large_image"/>
    <meta property="twitter:image" content="https://paperstreetsoap.azureedge.net/site/soapcapital-social-logo.png"/>
    <meta property="twitter:image:alt" content="Soap Capital"/>
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Soap Capital">
    <link href="manifest.webmanifest" rel="manifest" />
    <link rel="apple-touch-icon" href="https://paperstreetsoap.azureedge.net/site/soapcapital.jpg">

    <base href="/"/>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">

    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
    <link href="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css" rel="stylesheet"/>

    @if (HostEnvironment.IsDevelopment())
    {
        <link rel="stylesheet" href="css/soapcapital.min.css"/>
    }
    else
    {
        <link rel="stylesheet" href="https://paperstreetsoap.azureedge.net/site/soapcapital.min.css?v=1.1"/>
    }
    
    <link rel="stylesheet" href="css/tinymce.min.css"/>

    <link rel="icon" type="image/png" href="https://paperstreetsoap.azureedge.net/site/soapcapitaltransparent.png"/>

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-1T5H09ZF8X"></script>
    <script>window.dataLayer = window.dataLayer || []
            function gtag() { dataLayer.push(arguments); }
            gtag('js', new Date());
    
            gtag('config', 'G-1T5H09ZF8X');</script>

    <HeadOutlet @rendermode="RenderModeForPage"/>
</head>

<body>
<Routes @rendermode="RenderModeForPage"/>
<script src="_framework/blazor.web.js"></script>
<script src="_content/MudBlazor/MudBlazor.min.js"></script>
<script src="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"></script>
<script src="_content/TinyMCE.Blazor/tinymce-blazor.js"></script>
@if (IsServerPage)
{
    <script type="text/javascript" src="https://paperstreetsoap.azureedge.net/site/qrcode.min.js"></script>
}
<script src="//code.tidio.co/yitsvsgolots4kw6c3rndjkgprmw6mlr.js" async></script>
@if (HostEnvironment.IsDevelopment())
{
    <script src="js/soapcapital.min.js"></script>
    <script src="js/jsinterop.min.js"></script>
}
else
{
    <script src="https://paperstreetsoap.azureedge.net/site/soapcapital.min.js"></script>
    <script src="https://paperstreetsoap.azureedge.net/site/jsinterop.min.js"></script>
}



</body>

</html>

@code {
    private bool IsServerPage => HttpContextAccessor is {HttpContext: not null} && (HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/login")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/bybit-login")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/tyrel-login")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/bybit-sign-up")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/tyrel-sign-up")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/open-node-webhook")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/login-with-2fa")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/sign-up")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/account")
                                                                                    || HttpContextAccessor.HttpContext.Request.Path.StartsWithSegments("/sitemap"));

    private IComponentRenderMode? RenderModeForPage => IsServerPage ? null : InteractiveServer;
}