@using SoapCapital.Infrastructure.Configuration
@using Microsoft.Extensions.Options
@using SoapCapital.Application.Catalog.Subscriptions.Dto
@using SoapCapital.Application.Catalog.Subscriptions.Queries
@using SoapCapital.Shared.Authorization

@inherits LayoutComponentBase
@layout MainLayout

@inject IOptions<AppSettings> AppSettings
@inject ISubscriptionsService SubscriptionsService

<SectionOutlet SectionName="PageHeaderTitle"/>

@if (LoadTickerTape)
{
    <TradingViewTickerTape />
}
else
{
    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="44px" />
}


<MudContainer Class="pt-8 pb-8">
    <MudGrid>
        <MudItem lg="3" xs="12">
            <MudNavMenu Bordered="true">
                @foreach (var navigationLink in AppSettings.Value.NavigationLinks)
                {
                    if (string.IsNullOrEmpty(navigationLink.Area) || navigationLink.Area != "Members")
                        continue;

                    if (navigationLink.Children == null)
                    {
                        continue;
                    }

                    foreach (var childNavigationLink in navigationLink.Children)
                    {
                        var icon = childNavigationLink.Title switch
                        {
                            "Latest Review" => Icons.Material.Filled.NewReleases,
                            "Market Reviews" => Icons.Material.Filled.Reviews,
                            "Education" => Icons.Material.Filled.CastForEducation,
                            "Resources" => Icons.Material.Filled.LibraryBooks,
                            "Live Trading" => Icons.Material.Filled.LiveTv,
                            _ => string.Empty
                        };

                        <MudNavLink Href="@childNavigationLink.Href" Icon="@icon">@childNavigationLink.Title</MudNavLink>
                    }
                }
            </MudNavMenu>
            <MudDivider Class="mt-5 mb-5"/>
            <MudNavMenu Bordered="true">
                @if (UserSubscription != null && UserSubscription.PackageId != 5 && UserSubscription.PackageId != 6)
                {
                    <MudNavLink Href="https://discord.gg/mMvwy89szj" Icon="@Icons.Custom.Brands.Discord" Target="_blank">Fight Club Discord</MudNavLink>
                }

                <MudNavLink Href="https://edgesheet.com/signup?ref=TylerDurden" Icon="@Icons.Material.Filled.Book" Target="_blank">EdgeSheet Journal</MudNavLink>
                <MudNavLink Href="https://partner.bybit.com/b/FightClub" Icon="@Icons.Material.Filled.CandlestickChart" Target="_blank">Trade Crypto</MudNavLink>
            </MudNavMenu>
        </MudItem>
        <MudItem lg="9" xs="12">
            @Body
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private SubscriptionDto? UserSubscription { get; set; }
    private bool LoadTickerTape { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is {IsAuthenticated: true})
        {
            UserSubscription = await SubscriptionsService.GetUserSubscription(new GetUserSubscriptionRequest(user.GetUserId()));

            if (UserSubscription == null)
                NavigationManager.NavigateTo("/account/subscription");
        }

        LoadTickerTape = true;
    }
}